# metadati
name: CI/CD per progetto esemplificativo spring security
on:
  push:
    branches:
      - main
jobs:
  run-test:
    name: Esecuzione Test
    runs-on: ubuntu-latest
    steps:
      - name: checkout del codice
        uses: actions/checkout@v4
      - name: setup JDK
        uses: actions/setup-java@v1
        with:
          java-version: '21'
      - name: maven cache
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashfiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: esegui test
        run: mvn -B test
  quality-check:
    needs: run-test
    name: analisi SonarCloud
    runs-on: ubuntu-latest
    steps:
      - name: checkout del codice
        uses: actions/checkout@v4
      - name: setup JDK
        uses: actions/setup-java@v1
        with:
          java-version: '21'
      - name: cache sonarcloud pkgs
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{runner.os}}-sonar
      - name: maven cache
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashfiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: analisi sonarcloud
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
          SONAR_TOKEN: ${{secrets.SONAR_TOKEN}}
  build:
    needs: quality-check
    name: Build the JAR
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v4
      - name: setup JDK
        uses: actions/setup-java@v1
        with:
          java-version: '21'
      - name: maven cache
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashfiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: esegui build
        run: mvn -B package -DskipTests --file pom.xml
      - name: upload JAR
        uses: actions/upload-artifact@v2
        with:
          name: myArtifactRelease
          path: target/social-0.0.1-SNAPSHOT.jar
  push_image_to_registry:
    name: Push immagine docker verso registry Docker Hub
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v4
      - name: login to docker Hub
        # choose version
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      # metadati
      - name: raccolta metadati
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: disalvoantonio/social
      - name: setup JDK
        uses: actions/setup-java@v1
        with:
          java-version: '21'
      - name: maven cache
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashfiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: esegui build
        run: mvn -B package -DskipTests --file pom.xml
      #docker build and push
      - name: Build e Push immagine docker
        # choose version
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: disalvoantonio/social:testing #${{ steps.meta.output.tags }}
          labels: ${{ steps.meta.outputs.labels }}
